<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZackYJ&#39;s Blog</title>
    <link>https://blog.wvuuvw.xyz/</link>
    <description>Recent content on ZackYJ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 14 Nov 2021 11:25:05 -0400</lastBuildDate>
    
        <atom:link href="https://blog.wvuuvw.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>数据结构：并查集介绍和实现</title>
        <link>https://blog.wvuuvw.xyz/posts/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%AE%9E%E7%8E%B0/</link>
        <pubDate>Sun, 14 Nov 2021 11:25:05 -0400</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%AE%9E%E7%8E%B0/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%AE%9E%E7%8E%B0/ -&lt;blockquote&gt;
&lt;p&gt;并查集也叫不相交集合，是一种树状结构，适合解决集合连接等相关问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;并查集解决的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有若干个样本a、b、c、&amp;hellip;类型假设是V&lt;/li&gt;
&lt;li&gt;在并查集中一开始认为每个样本都在单独的集合里
&lt;img src=&#34;https://zackyj-typora.oss-cn-chengdu.aliyuncs.com/img/image-20211213152525794.png&#34; alt=&#34;image-20211213152525794&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并查集的三个核心操作（常数级复杂度）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Find(V)/findRepresent(V)&lt;/code&gt;  查找元素所在的集合根节点（或代表节点）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean isSameSet（Vx，Vy）&lt;/code&gt; 查询样本x和样本y是否属于一个集合&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void union(Vx，Vy)&lt;/code&gt; 把x和y各自所在集合的所有样本合并成一个集合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;h3 id=&#34;数组实现&#34;&gt;数组实现&lt;/h3&gt;
&lt;p&gt;如果并查集中值存储整型元素，可以使用数组来实现：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数组下标为 i 的元素为 i 的父节点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;quick-find&#34;&gt;Quick Find&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/strong&gt; -合并：将v1所在集合的所有元素都嫁接到v2的父节点上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;即：将下标v1的元素的值（父节点）改为下标v2元素的值（父节点）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原来父节点是v1的节点，父节点也改为 v2&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;https://zackyj-typora.oss-cn-chengdu.aliyuncs.com/img/image-20211213152833505.png&#34; alt=&#34;image-20211213152833505&#34; style=&#34;zoom: 33%;&#34; /&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v2&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;++){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; p1&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;扫描了一遍数组，时间复杂度O(n)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Find&lt;/code&gt; -查找元素所在集合（父节点）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;find&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
    rangeCheck&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;union最终形成的结构一个集合的高度只有2层，只需找一层即可找到父节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数组随机访问，时间复杂度O(1)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;isSameSet&lt;/code&gt; -是否是同一个集合&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;isSameSet&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v2&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;  find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;quick-union&#34;&gt;Quick Union&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Union和 Find 时间复杂度都是 O(logn)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Union&lt;/code&gt;-合并：让v1的根节点嫁接到v2的根节点上&lt;/p&gt;
&lt;img src=&#34;https://zackyj-typora.oss-cn-chengdu.aliyuncs.com/img/image-20211213153710143.png&#34; alt=&#34;image-20211213153710143&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Find&lt;/code&gt;-查找元素所在集合（根节点）&lt;/p&gt;
&lt;p&gt;在数组中不断向上找，直到父节点是自己为止（只有根节点的父节点是自己）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;find&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    rangeCheck&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;]){&lt;/span&gt;
        v &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; v&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;isSameSet&lt;/code&gt; 同上&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;哈希表实现&#34;&gt;哈希表实现&lt;/h3&gt;
&lt;p&gt;使用哈希表存储包装好的节点对象可以实现存储自定义类型&lt;/p&gt;
&lt;p&gt;使用了基于Rank的优化和路径优化，下文将介绍&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UnionFind2&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//样本包装成节点Node
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Node&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;{&lt;/span&gt;
        V value&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Node&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            value &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; v&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UnionSet&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//样本和 Node 的对应表，初始化建立后不再变化
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; HashMap&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//记录Node 和其父节点的对应关系,用不断查parents 表模拟指针向上指的过程
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; HashMap&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;,&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//当某个 Node是集合的代表点时才加入到 sizeMap 表
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;//记录整个集合的节点个数
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; HashMap&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;,&lt;/span&gt;Integer&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

        &lt;span style=&#34;color:#6272a4&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         * 初始化并查集
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         * @param values 节点的集合
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         */&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UnionSet&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;List&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; values&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V value &lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; values&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; node &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;value&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;value&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

        &lt;span style=&#34;color:#6272a4&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         * @param node
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         * @return 返回node 节点所在集合的代表点
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         * 重要优化：让 node 到 head 这条链上的节点father 都直接指向 head
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         * 由链路变为树状扁平
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;         */&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;findRepresent&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; node&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            Stack&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; path &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Stack&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;)){&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;//还能继续往上
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                path&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;push&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;   &lt;span style=&#34;color:#6272a4&#34;&gt;//沿途路径都加入一个容器
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                node &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//沿途所有结点的父节点直接指向集合代表点
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(!&lt;/span&gt;path&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()){&lt;/span&gt;
                parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;path&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;pop&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; node&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;isSameSet&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V a&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;V b&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(!&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;containsKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;)||!&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;containsKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;)){&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; findRepresent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;))==&lt;/span&gt;findRepresent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V a&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;V b&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(!&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;containsKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;)||!&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;containsKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;)){&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; aHead &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; findRepresent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
            Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; bHead &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; findRepresent&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;aHead &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; bHead&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
                Integer aSetSize &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;aHead&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                Integer bSetSize &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bHead&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;aSetSize &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;=&lt;/span&gt; bSetSize&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
                    parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bHead&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;aHead&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;aHead&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;aSetSize&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;bSetSize&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bHead&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    parents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;aHead&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;bHead&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;bHead&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;aSetSize&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;bSetSize&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    sizeMap&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;aHead&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;链表哈希表&#34;&gt;链表+哈希表&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;GenericUnionFind&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//样本和包装的Node对象对应表（仅用于初始化）
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Map&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; nodes &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; HashMap&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;();&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Node&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//高度，Union时进行优化
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; rank &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//节点存储的值
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        V value&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//父节点
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; parent &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;initSet&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;containsKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;}&lt;/span&gt;
        nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&amp;gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; V &lt;span style=&#34;color:#50fa7b&#34;&gt;find&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; node &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; findNode&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; node &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; node&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;findNode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; node &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; nodes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt; node &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(!&lt;/span&gt;Objects&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;node&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)){&lt;/span&gt;
            node&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; node&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            node &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; node&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; node&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;V v2&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; findNode&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        Node&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;V&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; p2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; findNode&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;||&lt;/span&gt; p2 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;)||&lt;/span&gt;Objects&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            p1&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; p1&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            p2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p1&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            p1&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;parent&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            p2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rank&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;++;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;isSame&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;V v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;V v2&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; Objects&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;),&lt;/span&gt;find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;优化&#34;&gt;优化&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Union 的过程中可能出现树不平衡的情况，退化成链表，导致复杂度降低到O(n)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;最佳实践：QuickUnion+基于Rank优化+路径减半Path Halving&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;quick-union-1&#34;&gt;Quick Union&lt;/h3&gt;
&lt;h4 id=&#34;基于size&#34;&gt;基于Size&lt;/h4&gt;
&lt;p&gt;让元素少的树，嫁接到元素多的树上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//记录以i为根节点的树有多少个元素
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UnionFind_QU_Size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; capacity&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;capacity&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    sizes &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;capacity&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;++){&lt;/span&gt;
        sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]){&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//p1嫁接到p2上
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//更新p2的size
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
       &lt;span style=&#34;color:#6272a4&#34;&gt;//p2嫁接到p1上
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p1&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//更新p1的高度
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; sizes&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;缺点：基于Size也可能导致树不平衡（元素少不一定高度低）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;基于rank&#34;&gt;基于Rank&lt;/h4&gt;
&lt;p&gt;矮的树嫁接到高的树上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UnionFind_QU_Rank&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; capacity&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;capacity&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    ranks &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;capacity&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;++){&lt;/span&gt;
        ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;union&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v1&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v1&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; p2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v2&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]){&lt;/span&gt;
        parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]){&lt;/span&gt;
        parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p1&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;//高度相等时注意高度长高1
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p1&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; p2&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        ranks&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;p2&lt;span style=&#34;color:#ff79c6&#34;&gt;]++;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;路径优化&#34;&gt;路径优化&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;随着Union次数增多，树的高度将越来越高，导致find操作变慢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;路径压缩&#34;&gt;路径压缩&lt;/h4&gt;
&lt;p&gt;在 find 操作时，让路径上所有节点指向根节点（让树变扁平）从而降低树的高度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;findPC&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
      rangeCheck&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; v&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;//所有的非根节点
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;          parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; find&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;]);&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; parents&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;v&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;让所有节点都指向根节点的实现成本较高，整体效率提升不明显&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;路径分裂&#34;&gt;路径分裂&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://zackyj-typora.oss-cn-chengdu.aliyuncs.com/img/image-20211213154823114.png&#34; alt=&#34;image-20211213154823114&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;路径减半&#34;&gt;路径减半&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://zackyj-typora.oss-cn-chengdu.aliyuncs.com/img/image-20211213154850235.png&#34; alt=&#34;image-20211213154850235&#34;&gt;&lt;/p&gt;
- https://blog.wvuuvw.xyz/posts/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%AE%9E%E7%8E%B0/ - </description>
        </item>
    
    
    
        <item>
        <title>Redis/Bitmap类型使用及原理</title>
        <link>https://blog.wvuuvw.xyz/posts/bitmap-%E7%B1%BB%E5%9E%8B/</link>
        <pubDate>Mon, 01 Feb 2021 13:31:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/bitmap-%E7%B1%BB%E5%9E%8B/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/bitmap-%E7%B1%BB%E5%9E%8B/ -&lt;blockquote&gt;
&lt;p&gt;BitMap 也叫位图&lt;/p&gt;
&lt;p&gt;是一种使用一个字节的 8 位 bit 的 01 状态来统计二值状态的数据类型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;二值统计：集合元素的取值就只有0和1两种，通常用于状态的统计&lt;/p&gt;
&lt;p&gt;例如：登录情况、打卡情况、日活统计等&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;原理&#34;&gt;原理&lt;/h2&gt;
&lt;p&gt;本质是由  0 和 1 两种状态表现组成的二进制位的bit数组，但底层使用 Redis/String 类型实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;存储时，实际存储的是一个 8bit bitmap 代表的 ASCII 码所对应的字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 get 指令可以获得这个 二进制位对应的 ASCII 码符号&lt;/p&gt;
&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202203221430078.png&#34; style=&#34;zoom:30%;&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本指令&#34;&gt;基本指令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;setbit key offset value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;offset 位偏移，每八位一个byte 作为 bitmap,自动扩容&lt;/li&gt;
&lt;li&gt;value 值只能是 0 或 1
&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202203221412735.png&#34; style=&#34;zoom:25%;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;getbit key offset&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strlen&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;统计共占有的字节数(byte)&lt;/li&gt;
&lt;li&gt;长度不是字符串长度，而是byte 数&lt;/li&gt;
&lt;li&gt;超过 8 位后，就按 8 位扩容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bitcount key [start] [end]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;统计这个键里面的位 1 的个数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bitop [operation] destkey key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对多个 key 的二进制数据进行位运算&lt;/li&gt;
&lt;li&gt;[operation] 可取的二进制操作符 ：AND、OR、NOT、XOR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;场景案例&#34;&gt;场景案例&lt;/h2&gt;
&lt;h4 id=&#34;记录用户月签到数据&#34;&gt;记录用户月签到数据&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;记录九月第一天签到 &lt;code&gt;setbit checkin:uid63:202109 0 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看九月第一天签到情况 &lt;code&gt;getbit checkin:uid63:202109 0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;统计日活月活&#34;&gt;统计日活月活&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;对每个用户 id 做一个全局的 id-位置映射&lt;/li&gt;
&lt;li&gt;位置为 1 的用户当天访问过: &lt;code&gt;setbit 20210101 1 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当天日活：&lt;code&gt;BITCOUNT 20210101&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;连续登录的用户位：&lt;code&gt;BITOP and destkey 202101015 202101016&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.wvuuvw.xyz/posts/bitmap-%E7%B1%BB%E5%9E%8B/ - </description>
        </item>
    
    
    
        <item>
        <title>SSM整合：分层配置和整合</title>
        <link>https://blog.wvuuvw.xyz/posts/ssm-%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/</link>
        <pubDate>Tue, 05 Jan 2021 15:23:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/ssm-%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/ssm-%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/ -&lt;h2 id=&#34;创建-web-项目&#34;&gt;创建 WEB 项目&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;web模块支持&#34;&gt;Web模块支持&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在 IDEA 中创建 Maven 项目，添加 web模板，或在一个普通 Maven 项目中添加 Web模块支持&lt;/li&gt;
&lt;li&gt;右键项目 Add Framework Support
&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202203141023428.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;配置文件准备&#34;&gt;配置文件准备&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[可选]mybatis-config.xml&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mybatis 核心配置文件，最终会整合到 Spring 中配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;spring-dao：Dao 层 整合 Mybatis 层&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DTO 约束，同 spring-service&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;beans&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#50fa7b&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#50fa7b&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.springframework.org/schema/beans
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;http://www.springframework.org/schema/beans/springbeans.
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;spring-service：Service 层，Spring 和配置文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;spring-mvc：Controller 层，SpringMVC 核心配置文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DTO 约束&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;beans&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#50fa7b&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#50fa7b&#34;&gt;xmlns:context=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#50fa7b&#34;&gt;xmlns:mvc=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.springframework.org/schema/mvc&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#50fa7b&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.springframework.org/schema/beans
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;       http://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;       http://www.springframework.org/schema/context
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;       http://www.springframework.org/schema/context/spring-context.xsd
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;       http://www.springframework.org/schema/mvc
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;       https://www.springframework.org/schema/mvc/spring-mvc.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;applicationContext.xml：总核心配置文件，引入各层配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;resource=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;classpath:spring-dao.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;resource=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;classpath:spring-service.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;resource=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;classpath:spring-mvc.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;maven-静态资源导出可选&#34;&gt;Maven 静态资源导出（可选）&lt;/h3&gt;
&lt;p&gt;让 Java 目录下和 Resources 目录下的配置文件都能编译导出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;resource&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;src/main/java&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;includes&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;**/*.properties&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;**/*.xml&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/includes&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filtering&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filtering&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/resource&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;resource&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;src/main/resources&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;includes&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;**/*.properties&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;**/*.xml&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/includes&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filtering&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filtering&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/resource&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sping-整合mybatis&#34;&gt;Sping 整合Mybatis&lt;/h2&gt;
&lt;h3 id=&#34;mybatis-环境&#34;&gt;Mybatis 环境&lt;/h3&gt;
&lt;h4 id=&#34;相关坐标&#34;&gt;相关坐标&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;mysql&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.47&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;druid&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.1.15&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mybatis&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mybatis&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.5.1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;junit&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;junit&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.12&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;数据源配置&#34;&gt;数据源配置&lt;/h4&gt;
&lt;p&gt;数据源配置文件 &lt;code&gt;datasource.properties&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;jdbc.driver=com.mysql.cj.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/test?useSSL=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;serverTimezone=Asia/Shanghai
jdbc.username=root
jdbc.password=jjbbkk123
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;可选mybatis-核心配置文件&#34;&gt;（可选）Mybatis 核心配置文件&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;!DOCTYPE configuration
&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;	  PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;	  &amp;#34;http://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
	       &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--配置LOG4J--&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;settings&amp;gt;&lt;/span&gt;
	          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;setting&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;logImpl&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;log4j&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
	  
	      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--类型别名配置--&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;typeAliases&amp;gt;&lt;/span&gt;
	      	&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;package&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.xxx.domain&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/typeAliases&amp;gt;&lt;/span&gt;
	    
	     &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--properties加载--&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--数据源配置--&amp;gt;&lt;/span&gt;
	      
	      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- Mapper.xml 映射文件的配置--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;spring-环境&#34;&gt;Spring 环境&lt;/h3&gt;
&lt;h4 id=&#34;相关坐标-1&#34;&gt;相关坐标&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--spring坐标--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-context&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.5.RELEASE&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.aspectj&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;aspectjweaver&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.8.13&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-jdbc&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.5.RELEASE&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-tx&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.5.RELEASE&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-test&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.5.RELEASE&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;spring-核心配置文件&#34;&gt;Spring 核心配置文件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;开启注解扫描
① 只扫描 service 下的包
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;base-package=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.zackyj.service&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;② 扫描基包，开启过滤器排除 controller
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;base-package=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.zackyj.service&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;use-default-filters=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:exclude-filter&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;annotation&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;expression=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.springframework.steretype.Controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/context:component-scan&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;(注入 bean 或用注解方式)&lt;/li&gt;
&lt;li&gt;配置事务管理器 和 声明式事务
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 配置事务管理器 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;transactionManager&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.springframework.jdbc.datasource.DataSourceTransactionManager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 注入数据库连接池 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;dataSource&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;dataSource&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--开启事务注解支持--&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;tx:annotation-driven/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;spring-junit-测试配置&#34;&gt;Spring Junit 测试配置&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;	  @RunWith&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SpringJUnit4ClassRunner&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
	  @ContextConfiguration&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;locations &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;classpath:applicationContext.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;})&lt;/span&gt;
	  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;SpringTestor&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
	      @Resource
	      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; UserService userService&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
	  
	      @Test
	      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;testUserService&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;
	          userService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;createUser&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mybatis-整合&#34;&gt;Mybatis 整合&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;将 mybatis 接口代理对象的创建权交给 spring 管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;导入整合包依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mybatis&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mybatis-spring&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写 spring-dao.xml
关联数据源配置文件 datasourse.properties&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:property-placeholder&lt;/span&gt;
  &lt;span style=&#34;color:#50fa7b&#34;&gt;location=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;classpath:datasourse.properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在数据库连接池中配置数据源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dbcp 半自动化操作 不能自动连接&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;		  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;dataSource&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.alibaba.druid.pool.DruidDataSource&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
		      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;driverClassName&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${jdbc.driver}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
		      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${jdbc.url}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
		      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${jdbc.username}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
		      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${jdbc.password}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
		  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;dataSource&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.mchange.v2.c3p0.ComboPooledDataSource&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 配置连接池属性 --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;driverClass&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${driver}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;jdbcUrl&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${url}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${username}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${password}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- c3p0连接池的私有属性 --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;maxPoolSize&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;30&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;minPoolSize&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 关闭连接后不自动commit --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;autoCommitOnClose&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 获取连接超时时间 --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;checkoutTimeout&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;10000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 当获取连接失败重试次数 --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;acquireRetryAttempts&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 SqlSessionFactory 对象交给 spring  IoC 容器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sqlSessionFactory&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.mybatis.spring.SqlSessionFactoryBean&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 注入数据库连接池 --&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;dataSource&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;dataSource&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
             &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--类型别名也可以在这里配置--&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;typeAliasesPackage&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.lagou.domain&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 也可以：配置MyBaties全局配置文件:mybatis-config.xml --&amp;gt;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;configLocation&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;classpath:mybatis-config.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 Dao 接口扫描&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 配置扫描Dao接口包，动态实现Dao接口注入到spring容器中，让Dao接口注入Service--&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--解释 ： https://www.cnblogs.com/jpfss/p/7799806.html--&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.mybatis.spring.mapper.MapperScannerConfigurer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 注入sqlSessionFactory --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sqlSessionFactoryBeanName&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sqlSessionFactory&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- 给出需要扫描Dao接口包 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;basePackage&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.zackyj.dao&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;整合springmvc&#34;&gt;整合SpringMVC&lt;/h2&gt;
&lt;h3 id=&#34;相关坐标-2&#34;&gt;相关坐标&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-webmvc&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.1.5.RELEASE&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;javax.servlet&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;javax.servlet-api&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.1.0&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;javax.servlet.jsp&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jsp-api&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.2&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;jstl&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jstl&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.2&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;webxml-配置&#34;&gt;web.xml 配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;配置核心的前端控制器 DispathcerServlet
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--DispatcherServlet--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;DispatcherServlet&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
	         &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
	         &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--一定要注意:这里加载的是总的配置文件--&amp;gt;&lt;/span&gt;
	         &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;classpath:applicationContext.xml&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;load-on-startup&amp;gt;&lt;/span&gt;1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/load-on-startup&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;

	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;DispatcherServlet&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;配置 Post 请求乱码过滤器
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;encodingFilter&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filter-class&amp;gt;&lt;/span&gt;
	        org.springframework.web.filter.CharacterEncodingFilter
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filter-class&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
	         &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;encoding&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
	         &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;utf-8&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filter-mapping&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;encodingFilter&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/*&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/filter-mapping&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;springmvc核心配置文件&#34;&gt;SpringMVC核心配置文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--组件扫描--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;base-package=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.lagou.controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--组件扫描 方式二--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;base-package=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.zackyj&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;use-default-filters=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context:include-filter&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;annotation&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;expression=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.springframework.steretype.Controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/context:component-scan&amp;gt;&lt;/span&gt; 
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--mvc注解增强--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;mvc:annotation-driven/&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--mvc注解增强 解决响应体乱码--&amp;gt;&lt;/span&gt;
	     &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;mvc:annotation-driven&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;mvc:message-converters&amp;gt;&lt;/span&gt;
	          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.springframework.http.converter.StringHttpMessageConverter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
	              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;supportedMediaTypes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
	                  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--                        解决响应体中文乱码--&amp;gt;&lt;/span&gt;
	                      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- response.setContentType(&amp;#34;text/html;charset=utf-8&amp;#34;) --&amp;gt;&lt;/span&gt;
	                      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;text/html;charset=utf-8&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
	                      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;application/json;charset=utf-8&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
	                  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
	              &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
	          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/mvc:message-converters&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/mvc:annotation-driven&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--视图解析器--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;org.springframework.web.servlet.view.InternalResourceViewResolver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;prefix&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;suffix&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--或返回JSON参数—fastjson--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;mvc:annotation-driven&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;mvc:message-converters&amp;gt;&lt;/span&gt;
	          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
	          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/mvc:message-converters&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/mvc:annotation-driven&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--实现静态资源映射--&amp;gt;&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;mvc:default-servlet-handler/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;整合-springmvc&#34;&gt;整合 SpringMVC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;无需额外整合，本就是一家&lt;/li&gt;
&lt;li&gt;做到 spring 和 web 容器整合 (生命周期关联)
&lt;ul&gt;
&lt;li&gt;让web容器启动的时候自动加载spring配置文件，web容&lt;/li&gt;
&lt;li&gt;器销毁的时候spring的ioc容器也销毁&lt;/li&gt;
&lt;li&gt;使用监听器来监听 servletContext 容器的创建和销毁&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;web.xml 中配置监听器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;listener&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;listener-class&amp;gt;&lt;/span&gt;
    	org.springframework.web.context.ContextLoaderListener
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/listener-class&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/listener&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;context-param&amp;gt;&lt;/span&gt;
  	&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
  	&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;classpath:applicationContext.xml&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/context-param&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://blog.wvuuvw.xyz/posts/ssm-%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/ - </description>
        </item>
    
    
    
        <item>
        <title>经典缓存设计思路</title>
        <link>https://blog.wvuuvw.xyz/posts/%E7%BB%8F%E5%85%B8%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1/</link>
        <pubDate>Sun, 03 Jan 2021 09:31:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/%E7%BB%8F%E5%85%B8%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/%E7%BB%8F%E5%85%B8%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1/ -&lt;p&gt;平时使用 Spring 开发后台时，经常使用 Spring 提供的注解来控制缓存的读写和更新&lt;/p&gt;
&lt;p&gt;常见的注解有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@EnableCaching&lt;/code&gt; 主程序开启缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@CacheConfig&lt;/code&gt; 类注解，描述该类中方法使用的缓存名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@Cacheable&lt;/code&gt; 方法注解，通常加在查询方法上，表示将方法的返回值缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@CachePut&lt;/code&gt; 方法注解，通常加载更新方法上，当数据库中数据更新后缓存数据也更新&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@CacheEvict&lt;/code&gt; 方法注解，通常加在删除方法上，当数据库中数据删除后相关缓存数据自动清除&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加 spring-boot-starter-cache 依赖坐标&lt;/li&gt;
&lt;li&gt;在启动类上使用 @EnableCaching 开启缓存&lt;/li&gt;
&lt;li&gt;使用 CacheManager 初始化要使用的缓存框架，添加@CacheConfig注入要使用的资源&lt;/li&gt;
&lt;li&gt;在方法上使用各种方法注解来控制缓存&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在一般的系统中这样设计没有问题，但如果考虑高并发场景，或者不使用 Spring 框架的情况下，就需要参照注解的实现思路进行额外设计&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cache-aside-pattern&#34;&gt;Cache Aside Pattern&lt;/h3&gt;
&lt;p&gt;边缘缓存模式：经典的缓存+数据库的读写模式，Spring cache 就使用这种方式&lt;/p&gt;
&lt;p&gt;数据读过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每次读取数据，都从 cache 里读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果读不到 cache 的数据，则从 db 里查询，此时缓存未命中（ miss）&lt;/li&gt;
&lt;li&gt;如果读到数据则直接返回，此时缓存命中（ hit）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将读取的数据加入缓存，下次读取时就能直接命中&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据写操作过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将变更写入数据库中&lt;/li&gt;
&lt;li&gt;删除缓存中对应的数据&lt;/li&gt;
&lt;/ul&gt;
- https://blog.wvuuvw.xyz/posts/%E7%BB%8F%E5%85%B8%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1/ - </description>
        </item>
    
    
    
        <item>
        <title>转账案例-引入事务和AOP改造</title>
        <link>https://blog.wvuuvw.xyz/posts/%E8%BD%AC%E8%B4%A6%E6%A1%88%E4%BE%8B-%E5%BC%95%E5%85%A5%E4%BA%8B%E5%8A%A1%E5%92%8C-aop-%E6%94%B9%E9%80%A0/</link>
        <pubDate>Sun, 03 Jan 2021 08:31:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/%E8%BD%AC%E8%B4%A6%E6%A1%88%E4%BE%8B-%E5%BC%95%E5%85%A5%E4%BA%8B%E5%8A%A1%E5%92%8C-aop-%E6%94%B9%E9%80%A0/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/%E8%BD%AC%E8%B4%A6%E6%A1%88%E4%BE%8B-%E5%BC%95%E5%85%A5%E4%BA%8B%E5%8A%A1%E5%92%8C-aop-%E6%94%B9%E9%80%A0/ -&lt;h3 id=&#34;基础功能&#34;&gt;基础功能&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;spring 整合 DBUtils ，实现简单的用户转账业务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Account 实体类&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Account&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Integer id&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; String name&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#6272a4&#34;&gt;// setter getter....
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AccountDao 接口和实现类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AccountDao&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#6272a4&#34;&gt;// 转出操作
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#6272a4&#34;&gt;// 转入操作
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;@Repository
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AccountDaoImpl&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; AccountDao &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; QueryRunner queryRunner&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
          queryRunner&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;update account set money=money-? where name=?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;
          money&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
          e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        queryRunner&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;update account set money=money+? where name=?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;
        money&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AccountService 接口和实现类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AccountService&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;transfer&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; String inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;@Service
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AccountServiceImpl&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; AccountService &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; AccountDao accountDao&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;transfer&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; String inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      accountDao&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
      accountDao&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
		&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;至此实现了基本的业务转账逻辑，但以上代码中，传出和转入操作在 Dao 层实现，分别都是独立的事务，如果在转出后发生异常，转入操作会得不到原子性的保证，出现数据不一致的情况&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;改进：把业务逻辑控制在一个事务中，将事务挪到service层&lt;/p&gt;
&lt;h3 id=&#34;传统的事务操作&#34;&gt;传统的事务操作&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;连接线程绑定工具类&#34;&gt;连接线程绑定工具类&lt;/h4&gt;
&lt;p&gt;为了保证在 Dao 层调用 in,out 方法的是同一个线程，编写一个连接工具类，从数据库获取连接对象，利用 ThreadLocal  实现和线程的绑定&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ConnectionUtils&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; DataSource dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; ThreadLocal&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; threadLocal &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ThreadLocal&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;        获取当前线程上绑定连接：如果获取到的连接为空，那么就要从数据源中获取连接，并且放到ThreadLocal中（绑定到当前线程）
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt;  Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;// 1. 先从ThreadLocal上获取连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        Connection connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; threadLocal&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#6272a4&#34;&gt;// 2. 判断当前线程中是否是有Connection
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;connection &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 3. 从数据源中获取一个连接，并且存入ThreadLocal中
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;// 不为null
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

                threadLocal&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;connection&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;  connection&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;        解除当前线程的连接绑定
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt;  &lt;span style=&#34;color:#50fa7b&#34;&gt;removeThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;
        threadLocal&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;事务管理器工具类&#34;&gt;事务管理器工具类&lt;/h4&gt;
&lt;p&gt;封装事务操作，通过上面的线程绑定工具类获取 Connection&lt;/p&gt;
&lt;p&gt;在这个工具类中，进行开启事务、提交事务、回滚事务、释放资源的统一控制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;@Component&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;transactionManager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;TransactionManager&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; ConnectionUtils connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;      开启事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;    */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;beginTransaction&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

        &lt;span style=&#34;color:#6272a4&#34;&gt;// 获取connection对象
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        Connection connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 开启了一个手动事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connection&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setAutoCommit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;        提交事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        Connection connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            connection&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;        回滚事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;rollback&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        Connection connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            connection&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rollback&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;        释放资源
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     */&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;release&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;// 将手动事务改回成自动提交事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        Connection connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            connection&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setAutoCommit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 将连接归还到连接池
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 解除线程绑定
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;removeThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;改造-servie-和-dao&#34;&gt;改造 Servie 和 Dao&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Service 层中进行手动开启事务，无误则手动提交，异常则回滚&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;transfer&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; String inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//手动开启事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;beginTransaction&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            accountDao&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;outUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            accountDao&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;inUser&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; money&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//手动提交事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rollback&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;release&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dao 方法中使用 DBUtils 时，传入从 ConnectionManager 中获取的 Connection&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String outAccount&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        String sql &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;update account set money = money - ? where name = ?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            queryRunner&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; sql&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;money&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;outAccount&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String inAccount&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Double money&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        String sql &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;update account set money=money+? where name=?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
         queryRunner&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt;sql&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;money&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;inAccount&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;通过以上的改造，已经实现了业务控制，但也引入了新的问题：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;业务层方法变得臃肿了，业务逻辑和事务控制方法耦合，如果业务层方法越来越多，将充斥着重复的代码，违背了面向对象低耦合的开发思想&lt;/p&gt;
&lt;h3 id=&#34;proxy-动态代理优化&#34;&gt;Proxy 动态代理优化&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;思路：将业务代码和事务控制代码分离，通过动态代理的方式对业务方法进行事务增强，以降低耦合从而不对业务层产生影响&lt;/p&gt;
&lt;h4 id=&#34;jdk-动态代理&#34;&gt;JDK 动态代理&lt;/h4&gt;
&lt;p&gt;基于接口的动态代理，被代理的类（目标类）必须实现一个接口&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202203122002207.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用实现 InvocationHandler 接口的拦截器和反射机制，生成代理接口的匿名类（代理对象），在调用目标方法前调用 InvokeHander 来实现方法增强&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JDKProxyFactory：动态代理工厂类，在返回的动态代理对象中进行事务控制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;@Component&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;proxyFactory&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;JDKProxyFactory&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     * 目标类（被代理对象）
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     * 利用接口来接收
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;     */&lt;/span&gt;
    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; AccountService accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; TransactionManager transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; AccountService &lt;span style=&#34;color:#50fa7b&#34;&gt;createAccountServiceJDKProxy&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        AccountService accountServiceProxy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        accountServiceProxy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;AccountService&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; Proxy&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;newProxyInstance&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClassLoader&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt;
                accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getInterfaces&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; InvocationHandler&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;

                    @Override
                    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Object &lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Object proxy&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Method method&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Object&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; Throwable &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                        Object result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;beginTransaction&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                            result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; method&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;args&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;InvocationTargetException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rollback&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                            transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;release&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;});&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; accountServiceProxy&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cglib-动态代理&#34;&gt;CGLIB 动态代理&lt;/h4&gt;
&lt;p&gt;基于父类的动态代理技术，无需实现接口&lt;/p&gt;
&lt;p&gt;在运行时，为代理类动态生成子类，重写被代理类所有非 final 方法。在子类中使用方法拦截的技术拦截所有方法调用，植入横切逻辑对方法进行增强&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;CglibProxyFactory&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; AccountService accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; TransactionManager transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; AccountService &lt;span style=&#34;color:#50fa7b&#34;&gt;createAccountServiceCglibProxy&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        AccountService accountServiceProxy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        accountServiceProxy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;AccountService&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
          Enhancer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; MethodInterceptor&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
              @Override
              &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Object &lt;span style=&#34;color:#50fa7b&#34;&gt;intercept&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Object o&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Method method&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Object&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; objects&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; MethodProxy methodProxy&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; Throwable &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                  Object result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                  &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                      &lt;span style=&#34;color:#6272a4&#34;&gt;// 1.开启事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                      transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;beginTransaction&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                      &lt;span style=&#34;color:#6272a4&#34;&gt;// 2.业务操作
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                      result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; method&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;accountService&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; objects&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                      &lt;span style=&#34;color:#6272a4&#34;&gt;// 3.提交事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                      transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                      e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                      &lt;span style=&#34;color:#6272a4&#34;&gt;// 4.回滚事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                      transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rollback&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                      &lt;span style=&#34;color:#6272a4&#34;&gt;// 5.释放资源
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                      transactionManager&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;release&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
              &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
          &lt;span style=&#34;color:#ff79c6&#34;&gt;});&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; accountServiceProxy&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;aop-优化&#34;&gt;AOP 优化&lt;/h3&gt;
&lt;p&gt;配置切点和切面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XML 格式的基本通知类型&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:config&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--        切点表达式--&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:pointcut&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myPt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;expression=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;execution(* xyz.wvuuvw.service.impl.AccountServiceImpl.*(..))&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--        切面配置--&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:aspect&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;transactionManager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:before&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;method=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;beginTransaction&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;pointcut-ref =&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myPt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:after-returning&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;method=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;commit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;pointcut-ref =&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myPt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:after-throwing&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;method=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;rollback&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;pointcut-ref =&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myPt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;aop:after&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;method=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;release&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;pointcut-ref =&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myPt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/aop:aspect&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/aop:config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;注解形式的环绕通知&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;@Component&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;transactionManager&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
@Aspect &lt;span style=&#34;color:#6272a4&#34;&gt;//表明该类为切面类
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;TransactionManager&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    @Autowired
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; ConnectionUtils connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;


    @Around&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;execution(* xyz.wvuuvw.service.impl.AccountServiceImpl.*(..))&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Object &lt;span style=&#34;color:#50fa7b&#34;&gt;around&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;ProceedingJoinPoint pjp&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; SQLException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

        Object proceed &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 开启手动事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setAutoCommit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 切入点方法执行
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            proceed &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pjp&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;proceed&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

            &lt;span style=&#34;color:#6272a4&#34;&gt;// 手动提交事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;commit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Throwable throwable&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            throwable&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 手动回滚事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;rollback&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 将手动事务恢复成自动事务
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setAutoCommit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 将连接归还到连接池
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;// 解除线程绑定
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            connectionUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;removeThreadConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;  proceed&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://blog.wvuuvw.xyz/posts/%E8%BD%AC%E8%B4%A6%E6%A1%88%E4%BE%8B-%E5%BC%95%E5%85%A5%E4%BA%8B%E5%8A%A1%E5%92%8C-aop-%E6%94%B9%E9%80%A0/ - </description>
        </item>
    
    
    
        <item>
        <title>Redis缓存设计案例</title>
        <link>https://blog.wvuuvw.xyz/posts/redis%E7%BC%93%E5%AD%98%E6%A1%88%E4%BE%8B/</link>
        <pubDate>Sat, 02 Jan 2021 18:31:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/redis%E7%BC%93%E5%AD%98%E6%A1%88%E4%BE%8B/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/redis%E7%BC%93%E5%AD%98%E6%A1%88%E4%BE%8B/ -&lt;h2 id=&#34;查询&#34;&gt;查询&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;查询先查 Reids&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;先从 Redis 里查询，如果有数据直接返回，没有再去查询 Mysql&lt;/li&gt;
&lt;li&gt;从 MySQL 查询到数据后，需要将数据写回 Redis 以保障下一次缓存命中
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;      User user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    String key &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; CACHE_KEY_USER&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//先从redis里面查询
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;User&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;// redis里面无，继续查询mysql
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;selectByPrimaryKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//都无数据,返回空数据
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; user&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//数据写回 redis
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; user&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;实际生产环境中，通常 redis 的 key 都会设置过期时间，如果正好遇到过期时间到期，某个热点 key 突然失效，会导致缓存击穿问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;击穿：缓存先击中(一开始 Redis 中有数据），但热点 key 突然失效&lt;/p&gt;
&lt;p&gt;在高并发下，出现大量的查询请求流向 MySQL （打穿）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;改进&#34;&gt;改进&lt;/h3&gt;
&lt;p&gt;为了避免缓存击穿，要保证只有一个请求操作，其他请求等待&lt;/p&gt;
&lt;p&gt;借鉴单例模式的双锁检测（ Double Check）思想&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;       user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;User&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
				&lt;span style=&#34;color:#6272a4&#34;&gt;//第一重检测
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
           &lt;span style=&#34;color:#6272a4&#34;&gt;//进来就加锁，保证一个请求操作
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;synchronized&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;UserService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//加锁后再查一次 redis
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;User&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//第二重检测，如果二次 Redis 还是 null，就可以去查MySQL 了
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;selectByPrimaryKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;//如果还是 null ，刚才被人删了
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;//回写 redis 完成一致性的同步工作
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                     &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setIfAbsent&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;7L&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;TimeUnit&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;DAYS&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; user&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;增删改&#34;&gt;增删改&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;修改先操作 MySQL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;插入用户数据时做第二次判断&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不仅判断返回的 int 行数 &amp;gt; 1，还要重新查出一次确保正确的插入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定成功后再存进 redis，以保证数据一致性&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;insertSelective&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#6272a4&#34;&gt;//再次查询 mysql 数据捞回来
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;  user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;selectByPrimaryKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;());&lt;/span&gt;
  &lt;span style=&#34;color:#6272a4&#34;&gt;//保证数据一致性
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;  String key &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; CACHE_KEY_USER&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
  redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除：保证先操作数据库再操作 Redis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产环境下使用逻辑删除居多，方便演示直接使用物理删除&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;deleteByPrimaryKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
  String key &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; CACHE_KEY_USER&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
  redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;delete&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改：同样使用修改操作后查询出的数据修改 Redis&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;updateByPrimaryKeySelective&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
  user &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; userMapper&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;selectByPrimaryKey&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;());&lt;/span&gt;
  String key &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; CACHE_KEY_USER&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getId&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
  redisTemplate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;opsForValue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;user&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.wvuuvw.xyz/posts/redis%E7%BC%93%E5%AD%98%E6%A1%88%E4%BE%8B/ - </description>
        </item>
    
    
    
        <item>
        <title>常见三大数据库连接池使用及工具类抽取</title>
        <link>https://blog.wvuuvw.xyz/posts/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
        <pubDate>Wed, 18 Nov 2020 11:25:05 -0400</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/ -&lt;h3 id=&#34;dbcp&#34;&gt;DBCP&lt;/h3&gt;
&lt;p&gt;DBCP 是Apache成员之一，在企业开发中也比较常见，也是tomcat内置的连接池&lt;/p&gt;
&lt;h4 id=&#34;dbcp-工具类&#34;&gt;DBCP 工具类&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DBCPUtils&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//1.定义常量 保存数据库连接的相关信息
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; String DRIVERNAME &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.mysql.jdbc.Driver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; String URL &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;jdbc:mysql://localhost:3306/db5?characterEncoding=UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; String USERNAME &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; String PASSWORD &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;123456&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//2.创建连接池对象 (有DBCP提供的实现类)
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; BasicDataSource dataSource &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; BasicDataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//3.使用静态代码块进行配置
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setDriverClassName&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;DRIVERNAME&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setUrl&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;URL&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setUsername&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;USERNAME&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setPassword&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;PASSWORD&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;setMaxActive&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;20&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//4.获取连接的方法
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; SQLException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

        &lt;span style=&#34;color:#6272a4&#34;&gt;//从连接池中获取连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        Connection connection &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; connection&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//5.释放资源方法
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Statement statement&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                statement&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//归还连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Statement statement&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; ResultSet resultSet&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; resultSet &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                resultSet&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                statement&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//归还连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;常见配置项&#34;&gt;常见配置项&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;driverClassName 数据库驱动名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;url 数据库地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;username 用户名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;password 密码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;maxActive 最大连接数量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;maxIdle 最大空闲连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;minIdle 最小空闲连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;initialSize 初始化连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;c3p0&#34;&gt;C3P0&lt;/h3&gt;
&lt;h4 id=&#34;xml-配置&#34;&gt;XML 配置&lt;/h4&gt;
&lt;p&gt;c3p0-config.xml 配置文件名不可更改&lt;/p&gt;
&lt;p&gt;放置在 src 或资源目录下，资源目录需要在 IDEA 中 mark as：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202203042120320.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;c3p0-config&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--默认配置--&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;default-config&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;driverClass&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;jdbcUrl&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;jdbc:mysql://localhost:3306/db5?characterEncoding=UTF-8&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;root&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;123456&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- initialPoolSize：初始化时获取三个连接，
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;      取值应在minPoolSize与maxPoolSize之间。 --&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;initialPoolSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;3&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- maxIdleTime：最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。--&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;maxIdleTime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;60&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- maxPoolSize：连接池中保留的最大连接数 --&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;maxPoolSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;100&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!-- minPoolSize: 连接池中保留的最小连接数 --&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;minPoolSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;10&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/default-config&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--配置连接池mysql--&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;named-config&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;driverClass&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;jdbcUrl&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;jdbc:mysql://localhost:3306/db5&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;root&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;123456&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;initialPoolSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;10&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;maxIdleTime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;30&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;maxPoolSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;100&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;minPoolSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;10&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/named-config&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;&amp;lt;!--配置连接池2,可以配置多个--&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;/c3p0-config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;常见配置&#34;&gt;常见配置&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202203042122442.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;工具类&#34;&gt;工具类&lt;/h4&gt;
&lt;p&gt;C3P0提供的核心工具类, ComboPooledDataSource ,&lt;/p&gt;
&lt;p&gt;如果想使用连接池,就必须创建该类的对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;new ComboPooledDataSource(); 使用 默认配置&lt;/li&gt;
&lt;li&gt;new ComboPooledDataSource(&amp;ldquo;mysql&amp;rdquo;); 使用命名配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;C3P0Utils&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//1.创建连接池对象 C3P0对DataSource接口的实现类
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;//使用的配置是 配置文件中的默认配置
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;//public static ComboPooledDataSource dataSource = new ComboPooledDataSource();
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//使用指定的配置
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; ComboPooledDataSource dataSource &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ComboPooledDataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//获取连接的方法
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; SQLException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//释放资源
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Statement statement&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;


        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                statement&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//归还连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Statement statement&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; ResultSet resultSet&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; resultSet &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                resultSet&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                statement&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//归还连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;druid&#34;&gt;Druid&lt;/h3&gt;
&lt;p&gt;阿里巴巴开发的号称为监控而生的数据库连接池，Druid是目前最好的数据库连接池。在功能、性能、扩展性方面，都超过其他数据库连接池，同时加入了日志监控，可以很好的监控DB池连接和SQL的执行情况&lt;/p&gt;
&lt;h4 id=&#34;properties-配置文件&#34;&gt;properties 配置文件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;.properties 格式&lt;/li&gt;
&lt;li&gt;文件名任意，目录也任意&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;driverClassName=com.mysql.jdbc.Driver
url=jdbc:mysql://127.0.0.1:3306/db5?characterEncoding=UTF-8
username=root
password=123456
initialSize=5
maxActive=10
maxWait=3000
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;工具类-1&#34;&gt;工具类&lt;/h4&gt;
&lt;p&gt;通过工厂来来获取 DruidDataSourceFactory类的createDataSource方法&lt;/p&gt;
&lt;p&gt;createDataSource(Properties p) 方法参数可以是一个属性集对象&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DruidUtils&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//1.定义成员变量
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; DataSource dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//2.静态代码块
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//3.创建属性集对象
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            Properties p &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Properties&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

            &lt;span style=&#34;color:#6272a4&#34;&gt;//4.加载配置文件 Druid 连接池不能够主动加载配置文件 ,需要指定文件
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            InputStream inputStream &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; DruidUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClassLoader&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;druid.properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#6272a4&#34;&gt;//5. 使用Properties对象的 load方法 从字节流中读取配置信息
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            p&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

            &lt;span style=&#34;color:#6272a4&#34;&gt;//6. 通过工厂类获取连接池对象
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            dataSource &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; DruidDataSourceFactory&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;createDataSource&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;p&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//获取连接的方法
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//获取Druid连接池对象的方法
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; DataSource &lt;span style=&#34;color:#50fa7b&#34;&gt;getDataSource&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; dataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;


    &lt;span style=&#34;color:#6272a4&#34;&gt;//释放资源
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Statement statement&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                statement&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//归还连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Statement statement&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; ResultSet resultSet&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; resultSet &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                resultSet&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                statement&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//归还连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SQLException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://blog.wvuuvw.xyz/posts/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/ - </description>
        </item>
    
    
    
        <item>
        <title>自定义数据库连接池的实现</title>
        <link>https://blog.wvuuvw.xyz/posts/jdbc%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AE%9E%E7%8E%B0/</link>
        <pubDate>Sat, 14 Nov 2020 11:25:05 -0400</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/jdbc%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AE%9E%E7%8E%B0/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/jdbc%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AE%9E%E7%8E%B0/ -&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;
&lt;p&gt;数据库连接池用于分配、管理和释放（归还）数据库连接对象 Connection&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有了数据库连接池，可以允许应用重复使用一个现有的数据库连接&lt;/li&gt;
&lt;li&gt;从而避免了频繁创建和释放连接，消耗系统资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最常用的第三方连接池有DBCP、 C3p0、Druid 等，本文实现一个具有基本功能的连接池&lt;/p&gt;
&lt;h3 id=&#34;基本功能&#34;&gt;基本功能&lt;/h3&gt;
&lt;p&gt;JDBC 中 &lt;code&gt;java.sql.DataSource&lt;/code&gt; 接口定义了数据库连接池的规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代表一个数据源，可以用于实现连接池&lt;/li&gt;
&lt;li&gt;获取数据库连接对象的方法：&lt;code&gt;Connection getConnection();&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;覆写这个接口中的方法，可实现基本的连接池功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义一个类，实现DataSource接口&lt;/li&gt;
&lt;li&gt;定义一个容器，保存多个Connection连接对象&lt;/li&gt;
&lt;li&gt;定义静态代码块，通过JDBC工具类获取多个连接保存到容器中&lt;/li&gt;
&lt;li&gt;==重写getConnection方法，从容器获取连接并返回==&lt;/li&gt;
&lt;li&gt;定义getSize方法，获取容器大小并返回&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MyDataSource&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; DataSource&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//1.定义集合容器，用于保存多个数据库连接对象
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;//Collections.synchronizedList可以将普通集合转成线程安全集合
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; List&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; pool &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Collections&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;synchronizedList&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//2.定义静态代码块，生成10个数据库连接保存到集合中
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; 10&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Connection con &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; JDBCUtils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//返回连接池的大小
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;getSize&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//从池中返回一个数据库连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//从池中获取数据库连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; RuntimeException&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;连接数量已用尽&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
 &lt;span style=&#34;color:#ff79c6&#34;&gt;.....&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;其他需要重写的方法&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;归还连接功能&#34;&gt;归还连接功能&lt;/h3&gt;
&lt;h4 id=&#34;继承&#34;&gt;&lt;del&gt;继承&lt;/del&gt;&lt;/h4&gt;
&lt;p&gt;通过打印 Connection.getClass() 可以发现 DriverManager 获取的连接对象实现类是 JDBC4Connection，是不是可以自定义一个类来继承JDBC4Connection这个类，重写close() 方法呢？&lt;/p&gt;
&lt;p&gt;经过测试是行不通的，DriverManager 还是会去获取JDBC4Connection对象，猜测应该是使用了自定义的类加载的缘故，而这个驱动内部的类我们是无法修改的&lt;/p&gt;
&lt;h4 id=&#34;装饰者模式&#34;&gt;装饰者模式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;定义一个类，实现Connection接口，这样就具备了和JDBC4Connection相同行为， 重写close()方法，完成连接归还，其余功能调用原有实现方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;实现步骤&#34;&gt;实现步骤&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;定义一个类实现Connection接口&lt;/li&gt;
&lt;li&gt;定义Connection连接对象和连接池容量对象的成员变量&lt;/li&gt;
&lt;li&gt;用有参构造方法给成员变量赋值&lt;/li&gt;
&lt;li&gt;重写close()方法，将连接对象添加到池子中&lt;/li&gt;
&lt;li&gt;其他方法调用Mysql 驱动包的原方法即可&lt;/li&gt;
&lt;li&gt;在自定义连接池中，将获取的连接对象通过自定义连接对象进行包装&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MyConnection&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; Connection &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//定义Connection连接对象和连接池容器对象的变量
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; List&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//提供有参构造方法，接收连接对象和连接池对象，对变量赋值
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MyConnection2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;List&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;con&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; con&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;pool&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;//重写close()方法，完成连接的归还
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; SQLException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    其他方法&lt;span style=&#34;color:#ff79c6&#34;&gt;....&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;xxx&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;修改获取连接方法&#34;&gt;修改获取连接方法&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;//从池中返回一个数据库连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    @Override
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//从池中获取数据库连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            Connection con &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//通过自定义连接对象进行包装
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            MyConnection mycon &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; MyConnection&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;pool&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;//返回包装后的连接对象
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; mycon&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; RuntimeException&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;连接数量已用尽&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;问题是：我只想重写close方法，却有其他大量的方法需要在类中重写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;适配器模式&#34;&gt;适配器模式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;定义一个适配器类（中间类）实现Connection接口，将其他所有方法进行实现 自定义类只需要继承这个适配器类，重写要改进的那个方法就行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;实现步骤-1&#34;&gt;实现步骤&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;定义适配器类，实现 Connection 接口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义 Connection 连接对象的成员变量&lt;/li&gt;
&lt;li&gt;有参构造给成员变量赋值&lt;/li&gt;
&lt;li&gt;除了 close 之外的方法，都调用 conn 原本的方法完成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义连接类，继承适配器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义 Connection 连接对象和连接池容器(List)
通过有参构造赋值&lt;/li&gt;
&lt;li&gt;重写 close() 方法，完成连接归还
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;	  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MyConnection2&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;extends&lt;/span&gt; MyAdapter &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
	      &lt;span style=&#34;color:#6272a4&#34;&gt;//2.定义Connection连接对象和连接池容器对象的变量
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;	      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
	      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; List&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
	      &lt;span style=&#34;color:#6272a4&#34;&gt;//3.提供有参构造方法，接收连接对象和连接池对象，对变量赋值
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;	      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MyConnection2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;List&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
	          &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;// 将接收的数据库连接对象给适配器父类传递
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;	          &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;con&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; con&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
	          &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;pool&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
	      &lt;span style=&#34;color:#6272a4&#34;&gt;//4.在close()方法中，完成连接的归还
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;	      @Override
	      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; SQLException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
	          pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
	      &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
	  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在自定义连接池中，对连接对象用自定义连接类包装
``` java
//从池中返回一个数据库连接
@Override
public Connection getConnection() {
if(pool.size() &amp;gt; 0) {
//从池中获取数据库连接
Connection con = pool.remove(0);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	          //通过自定义连接对象进行包装
	          //MyConnection mycon = new MyConnection(con,pool);
	          MyConnection2 mycon = new MyConnection2(con,pool);

	          //返回包装后的连接对象
	          return mycon;
	      }else {
	          throw new RuntimeException(&amp;quot;连接数量已用尽&amp;quot;);
	      }
	  }
&lt;/code&gt;&lt;/pre&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;但依然还要自己写个适配器类，还是有点繁琐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;动态代理模式&#34;&gt;动态代理模式&lt;/h3&gt;
&lt;p&gt;使用JDK动态代理的方式，重写 invoke 方法，在方法中对原有方法进行增强&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//动态代理方式
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;@Override
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Connection &lt;span style=&#34;color:#50fa7b&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//从池中获取数据库连接
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        Connection con &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

        Connection proxyCon &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;Proxy&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;newProxyInstance&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClassLoader&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Class&lt;span style=&#34;color:#ff79c6&#34;&gt;[]{&lt;/span&gt;Connection&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; InvocationHandler&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#6272a4&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;                执行Connection实现类所有方法都会经过invoke
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;                如果是close方法，则将连接还回池中
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;                如果不是，直接执行实现类的原有方法
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;             */&lt;/span&gt;
            @Override
            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; Object &lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Object proxy&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Method method&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; Object&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; Throwable &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;method&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;close&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; method&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;con&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;args&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;});&lt;/span&gt;

        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; proxyCon&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; RuntimeException&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;连接数量已用尽&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://blog.wvuuvw.xyz/posts/jdbc%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AE%9E%E7%8E%B0/ - </description>
        </item>
    
    
    
        <item>
        <title>简易多人聊天室[2]-NIO模型实现</title>
        <link>https://blog.wvuuvw.xyz/posts/%E7%AE%80%E6%98%93%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4-nio%E5%AE%9E%E7%8E%B0/</link>
        <pubDate>Sat, 02 May 2020 13:31:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/%E7%AE%80%E6%98%93%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4-nio%E5%AE%9E%E7%8E%B0/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/%E7%AE%80%E6%98%93%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4-nio%E5%AE%9E%E7%8E%B0/ -&lt;h2 id=&#34;总体流程&#34;&gt;总体流程&lt;/h2&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt; 注册 ACCEPT 事件监听到 Selector 中，用于监听 accept 事件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当有一个客户端发出连接请求，服务器接收了客户端连接请求时，即触发了 &lt;code&gt;ServerSocketChannel&lt;/code&gt; 的 accept 事件&lt;/li&gt;
&lt;li&gt;与 BIO 模型中 &lt;code&gt;ServerSocket.accept()&lt;/code&gt; 执行的事件相同，即接收了该客户端的连接请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt; 触发 accept 事件后，服务器端&lt;u&gt;处理&lt;/u&gt;新建立连接的客户端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;得到客户端对应的 SocketChannel&lt;/li&gt;
&lt;li&gt;将新连接的客户端的 SocketChannel 注册 READ 事件在 Selector 中&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;即让 Selector 监控客户端的 SocketChannel 是否触发 READ (可读) 事件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;触发时机：当该客户端像服务器发送了数据，其 SocketChannel 上有了可供服务器读取的数据时，触发 READ 事件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对可读事件触发后的处理操作和 BIO 类似：读取 SocketChannel 的数据并转发给当前连接到服务器的其他客户端&lt;/p&gt;
&lt;p&gt;但在 NIO 中，处理客户端连接的操作都是&lt;strong&gt;在同一个线程中进行&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;虽然 NIO 模型中各个读写操作支持非阻塞式的调用，但 Selector 监听各个 Channel  的 select() 方法是阻塞调用的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;也就是说，Selector 上监听的所有 Channel 都没有触发其注册监听的事件，此时 Selector 会阻塞，直到有所要监听事件发生&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;服务端&#34;&gt;服务端&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;
&lt;h4 id=&#34;成员--构造方法&#34;&gt;成员 &amp;amp; 构造方法&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; String QUIT &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;bye&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; DEFAULT_PORT &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 9988&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; BUFFER_SIZE &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 1024&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; ServerSocketChannel serverChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Selector selector&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//ServerSocketChannel 从 SocketChannel 中读取数据
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; ByteBuffer readBuffer &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ByteBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;allocate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;BUFFER_SIZE&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//用于向其他的 SocketChannel 中写数据,负责实现转发消息时写入其他客户端
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; ByteBuffer writeBuffer &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ByteBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;allocate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;BUFFER_SIZE&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//声明标准化字符集
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Charset charset &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Charset&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//自定监听的端口
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; port&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Server&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;DEFAULT_PORT&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Server&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; port&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; port&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;help-func&#34;&gt;Help func&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;统一的关闭操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Closeable closeable&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;closeable &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
          closeable&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
          e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主流程start&#34;&gt;主流程：&lt;code&gt;start()&lt;/code&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;现在开始实现核心的方法 start&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;调用静态方法 &lt;code&gt;ServerSocketChannel.open() &lt;/code&gt;创建一个 ServerSocketChannel&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;serverChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ServerSocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt;
serverChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;configureBlocking&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;默认情况下创建的 ServerSocketChannel 为阻塞式调用，这里我们需要设置调用模式为非阻塞式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 ServerSocketChannel 关联的 ServerSocket 绑定到监听端口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;serverChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;bind&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; InetSocketAddress&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;port&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 selector 对象，并将 ServerSocketChannel 的 ACCEPT事件注册到 selector 对象中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;selector &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
serverChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;selector&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;SelectionKey&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OP_ACCEPT&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始监听连接请求&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
  selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
  Set&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;SelectionKey&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; keys &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;selectedKeys&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;当没有channel 触发事件时 select() 会阻塞，直到有 channel 的事件触发。服务端需要不断监听，需要在循环中调用&lt;/li&gt;
&lt;li&gt;selectedKeys 返回本次监听到的所有触发了事件的 channel 对应的 selectedKey Set 集合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;处理触发事件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SelectionKey key &lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; keys&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
  handles&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
keys&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;对于集合中每一个触发事件，调用 handles() 进行处理，将在后文实现。&lt;/li&gt;
&lt;li&gt;处理完后，需要手动将 selectedKeys 集合清空，保证下一轮不处理过期的重复事件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;事件处理handles&#34;&gt;事件处理：&lt;code&gt;handles()&lt;/code&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;accept-事件&#34;&gt;ACCEPT 事件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发生在服务器通道 &lt;code&gt;serverSocketChannel&lt;/code&gt; 上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;触发时机： 和客户端建立了连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;处理流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;调用传入的 selectedKey 的 &lt;code&gt;channel()&lt;/code&gt; 获得触发这个事件的 ServerSocketChannel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用 &lt;code&gt;accept()&lt;/code&gt; 方法，返回对应的客户端通道 SocketChannel&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端的 channel 也要切换到非阻塞调用模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接着客户端的 channel 也需要注册到 selector 上，事件为 READ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isAcceptable&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()){&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//得到触发了这个事件的通道
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    ServerSocketChannel serverChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;ServerSocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;channel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    SocketChannel clientChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; serverChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;accept&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;configureBlocking&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;selector&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;SelectionKey&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OP_READ&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;getClientName&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)+&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;已连接&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;read-事件&#34;&gt;READ 事件&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;利用 Buffer 从客户端 channel 中读出发来的消息，进行打印等处理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于 Buffer 的操作在之前本地文件拷贝的文章中有介绍：传送门&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将消息转发到其他客户端&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查是否退出等业务操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isReadable&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()){&lt;/span&gt;
    SocketChannel clientChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;channel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    String fwdMsg &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; receive&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;fwdMsg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()){&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//消息为空，出现异常，不再监听该 channel 的事件
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//更新 selector 状态，立即返回 select() 方法（多线程下）
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;wakeup&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;getClientName&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; fwdMsg&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        forwardMessage&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; fwdMsg&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;// 检查用户是否退出
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;checkQuit&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;fwdMsg&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;wakeup&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;getClientName&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;clientChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;已断开&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;buffer-接收数据&#34;&gt;Buffer 接收数据&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; String &lt;span style=&#34;color:#50fa7b&#34;&gt;receive&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SocketChannel client&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; IOException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//清空缓冲区防止污染
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//只要 channel 还有字节读，就一直读
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;flip&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; String&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;消息转发&#34;&gt;消息转发&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;forwardMessage&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SocketChannel client&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; String fwdMsg&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; IOException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;//遍历所有监听的 selectionKey
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SelectionKey key&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;keys&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            Channel connectedClient &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;channel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
          	&lt;span style=&#34;color:#6272a4&#34;&gt;//跳过服务器的 channel
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;connectedClient &lt;span style=&#34;color:#ff79c6&#34;&gt;instanceof&lt;/span&gt; ServerSocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
						&lt;span style=&#34;color:#6272a4&#34;&gt;//跳过发送者客户端的channel
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isValid&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;!&lt;/span&gt;client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;connectedClient&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;getClientName&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; fwdMsg&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
                writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;flip&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;hasRemaining&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;SocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;connectedClient&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;客户端&#34;&gt;客户端&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;主流程start-1&#34;&gt;主流程：&lt;code&gt;start()&lt;/code&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;获取 SocketChannel，配置为非阻塞模式&lt;/li&gt;
&lt;li&gt;创建 selector，注册 clientChannel 的 CONNECT 事件&lt;/li&gt;
&lt;li&gt;正式向服务器发送连接请求 clientChannel&lt;/li&gt;
&lt;li&gt;不停 select() 监听触发的事件，遍历这些事件进行处理&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;client &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; SocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;configureBlocking&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

selector &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;selector&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; SelectionKey&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OP_CONNECT&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; InetSocketAddress&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;host&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; port&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    Set&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;SelectionKey&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; selectionKeys &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; selector&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;selectedKeys&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SelectionKey key &lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; selectionKeys&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      	handles&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    selectionKeys&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;事件处理handles-1&#34;&gt;事件处理：&lt;code&gt;handles()&lt;/code&gt;&lt;/h3&gt;
&lt;h5 id=&#34;connect&#34;&gt;CONNECT&lt;/h5&gt;
&lt;p&gt;连接就绪时触发该事件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;获取触发该事件的 clientChannel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要额外的线程来处理键盘的阻塞输入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注册该 clientChannel 的 READ 事件到 selector 中&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isConnectable&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    SocketChannel client &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;channel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#6272a4&#34;&gt;//建立连接的过程是否就绪
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isConnectionPending&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;finishConnect&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#6272a4&#34;&gt;// 处理用户的输入
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Thread&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; UserInputHandler&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;selector&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; SelectionKey&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OP_READ&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;处理键盘输入的线程：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UserInputHandler&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; Runnable&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; Client chatClient&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UserInputHandler&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Client chatClient&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;chatClient&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; chatClient&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        @Override
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;// 等待用户输入消息
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                BufferedReader consoleReader &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    String input &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; consoleReader&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;readLine&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                    &lt;span style=&#34;color:#6272a4&#34;&gt;// 向服务器发送消息
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                    chatClient&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;input&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    &lt;span style=&#34;color:#6272a4&#34;&gt;// 检查用户是否准备退出
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;chatClient&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;checkQuit&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;input&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;利用 Buffer 发送消息到服务器：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String msg&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; IOException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;msg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;msg&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
    writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;flip&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;hasRemaining&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;writeBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#6272a4&#34;&gt;// 检查用户是否准备退出
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;checkQuit&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;msg&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;selector&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;read&#34;&gt;READ&lt;/h5&gt;
&lt;p&gt;服务器转发消息来时触发该事件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isReadable&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
     SocketChannel client &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SocketChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; key&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;channel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
     String msg &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; receive&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
     &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;msg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;isEmpty&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
       &lt;span style=&#34;color:#6272a4&#34;&gt;// 服务器异常
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;       close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;selector&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
     &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
       System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;msg&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
     &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
 &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;利用 Buffer 接收服务器的消息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; String &lt;span style=&#34;color:#50fa7b&#34;&gt;receive&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;SocketChannel client&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;throws&lt;/span&gt; IOException &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
    readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;flip&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; String&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;charset&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;readBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;运行客户端时需要在运行配置中运行多个实例运行：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202201242042716.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202201242043942.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202201242058243.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
- https://blog.wvuuvw.xyz/posts/%E7%AE%80%E6%98%93%E5%A4%9A%E4%BA%BA%E8%81%8A%E5%A4%A9%E5%AE%A4-nio%E5%AE%9E%E7%8E%B0/ - </description>
        </item>
    
    
    
        <item>
        <title>Java 四种本地文件拷贝方式比较和测试</title>
        <link>https://blog.wvuuvw.xyz/posts/java%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D/</link>
        <pubDate>Mon, 13 Apr 2020 13:31:23 +0800</pubDate>
        
        <guid>https://blog.wvuuvw.xyz/posts/java%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D/</guid>
        <description>ZackYJ&#39;s Blog https://blog.wvuuvw.xyz/posts/java%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D/ -&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;为了便于测试，定义一个文件拷贝的接口让测试类去继承它：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;IFileCopy&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;copyFile&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;File source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; File dest&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;无论是 Stream 还是 Channel ，用完都需要调用 &lt;code&gt;close()&lt;/code&gt;方法关闭&lt;/p&gt;
&lt;p&gt;为了防止重复代码，这里统一写一个关闭的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Closeable closeable&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;closeable &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                closeable&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;不带缓冲区的流拷贝&#34;&gt;不带缓冲区的流拷贝&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;最朴素的文件拷贝方式，不使用带任何缓冲区的流装饰&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从源文件的输入流一个字节一个字节读取&lt;/p&gt;
&lt;p&gt;只要还有数据 （&lt;code&gt;read()&lt;/code&gt; 返回 ≠ -1）就循环读取并写入目标文件的输出流&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;noBufferedStreamCopy&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; IFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;

        @Override
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;copyFile&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;File source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; File dest&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            InputStream is &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            OutputStream os &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//创建文件输入流
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                is &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;source&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//创建文件输出流
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                os &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileOutputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;dest&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; result&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//一个字节一个字节读，读到就输出到文件输出流
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; is&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    os&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;is&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;os&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;带缓冲区的流拷贝&#34;&gt;带缓冲区的流拷贝&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用装饰器模式，用带缓冲区的流对输入输出流进行包裹&lt;/li&gt;
&lt;li&gt;需要定义缓冲区，即每次写入的次数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt;  &lt;span style=&#34;color:#50fa7b&#34;&gt;bufferedStreamCopy&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; IFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        @Override
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;copyFile&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;File source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; File dest&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            InputStream is &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            OutputStream os &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                is &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; BufferedInputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;source&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
                os &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; BufferedOutputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileOutputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;dest&lt;span style=&#34;color:#ff79c6&#34;&gt;));&lt;/span&gt;
                &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; buffer &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;1024&lt;span style=&#34;color:#ff79c6&#34;&gt;];&lt;/span&gt;
                &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; len&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;((&lt;/span&gt;len &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; is&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
                    os&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; len&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FileNotFoundException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;is&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;os&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用-buffer-的-channel-拷贝&#34;&gt;使用 Buffer 的 Channel 拷贝&lt;/h3&gt;
&lt;h4 id=&#34;nio-模型&#34;&gt;NIO 模型&lt;/h4&gt;
&lt;p&gt;同步非阻塞式通信模型，&lt;code&gt;java.nio&lt;/code&gt; 包下提供了 Buffer、Channel 等非阻塞式通信模型的类&lt;/p&gt;
&lt;p&gt;核心思路是使用双向的 Channel 代替单向的 Stream，Channel 和 Stream 相比：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;流是有方向的，一个流只能读或写；而 Channel 通道是双向的，既能读又能写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;流的读写方法都是阻塞的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Channel 通道的读写有阻塞和非阻塞两种模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于支持非阻塞调用，允许个线程里处理多个 Channel 的 I/O&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;buffer&#34;&gt;Buffer&lt;/h4&gt;
&lt;p&gt;Channel 的读写操作可以通过 Buffer 来实现，Buffer 代表内存中一段可以读写的缓冲区域&lt;/p&gt;
&lt;p&gt;Buffer 的基本操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flip()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compact()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下图详细介绍了他们的用法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202201231936810.png&#34; alt=&#34;&#34;&gt;{:height 497, :width 564}&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;nioBufferedStreamCopy&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; IFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        @Override
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;copyFile&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;File source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; File dest&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            FileChannel sourceChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            FileChannel destChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                sourceChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;source&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getChannel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                destChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileOutputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;dest&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getChannel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;

                ByteBuffer buffer &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ByteBuffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;allocate&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;1024&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;sourceChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;!=-&lt;/span&gt; 1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#6272a4&#34;&gt;//从源文件的 channel 读取数据写入 byteBuffer
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                    buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;flip&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                    &lt;span style=&#34;color:#6272a4&#34;&gt;//从 byteBuffer 中读取数据写入 目标文件的 channel
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                    &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;hasRemaining&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()){&lt;/span&gt;
                        destChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
                    buffer&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FileNotFoundException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;sourceChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;destChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用-transfer-的-channel-拷贝&#34;&gt;使用 Transfer 的 Channel 拷贝&lt;/h3&gt;
&lt;p&gt;Channel 除了通过 Buffer 进行读写操作，也可以不显式通过 Buffer，直接在 Channel 层面进行数据交换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心方法：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;transferTo&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; position&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; count&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;
                                    WritableByteChannel target&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;常用的 Channel：
&lt;ul&gt;
&lt;li&gt;FileChannel&lt;/li&gt;
&lt;li&gt;ServerSocketChannel&lt;/li&gt;
&lt;li&gt;SocketChannel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;nioTransferCopy&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;implements&lt;/span&gt; IFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        @Override
        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;copyFile&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;File source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; File dest&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            FileChannel sourceChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            FileChannel destChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;

            &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                sourceChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileInputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;source&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getChannel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                destChannel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; FileOutputStream&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;dest&lt;span style=&#34;color:#ff79c6&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getChannel&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
                &lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; copyed &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
              	&lt;span style=&#34;color:#6272a4&#34;&gt;//transferTo 方法不保证一次性全部传输完
&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;copyed &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; sourceChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()){&lt;/span&gt;
                    copyed  &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; sourceChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;transferTo&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; sourceChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; destChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;FileNotFoundException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;finally&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;sourceChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
                close&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;destChannel&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;p&gt;简单起见，编写一个测试方法，直接在 main 方法中调用。拷贝 5 次统计平均时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
        File smallFile &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/Users/admin/Downloads/test.mp4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        File smallFileCopy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/Users/admin/Downloads/testCopy/test.mp4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        File bigFile &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/Users/admin/Downloads/golangDoc.zip&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        File bigFileCopy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/Users/admin/Downloads/testCopy/golangDoc.zip&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

        System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;=====Small file (&amp;lt;1M) Copy test=======&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; noBufferedStreamCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; smallFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; smallFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; bufferedStreamCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; smallFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; smallFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; nioBufferedStreamCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; smallFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; smallFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; nioTransferCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; smallFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; smallFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;

        System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;=====Big file (&amp;gt;10M) Copy test=======&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; noBufferedStreamCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; bigFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; bigFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; bufferedStreamCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; bigFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; bigFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; nioBufferedStreamCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; bigFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; bigFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
        benchmark&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; nioTransferCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;(),&lt;/span&gt; bigFile&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; bigFileCopy&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;benchmark&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;IFileCopy test&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;File source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;File target&lt;span style=&#34;color:#ff79c6&#34;&gt;){&lt;/span&gt;
        &lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; elapsed &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0L&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; TEST_ROUNDS&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; startTime &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
            test&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;copyFile&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;source&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt;target&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
            elapsed &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; startTime&lt;span style=&#34;color:#ff79c6&#34;&gt;;&lt;/span&gt;
            target&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;delete&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
        System&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;test&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;()+&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;平均用时:&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;elapsed&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;TEST_ROUNDS&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ms&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;测试结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://logseq.oss-cn-chengdu.aliyuncs.com/noteImg/202201241327030.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不使用缓冲区一个字节一个字节拷贝大文件实在太慢了&amp;hellip;.&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;缓冲区的使用对性能的提升效果非常明显&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;除了 &lt;code&gt;noBufferStreamCopy&lt;/code&gt; 其他方法拷贝方式性能表现差不多&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;但是随着文件增大，nioTransferCopy 的性能更好一些&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他拷贝性能差距不大的原因是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NIO 在 JDK4 版本中推出，和 JDK3 中 BIO 方法对比性能有较大提升&lt;/li&gt;
&lt;li&gt;但 Java 之后的版本，传统 IO 的底层实现已经使用 NIO 新的方式重新实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://blog.wvuuvw.xyz/posts/java%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D/ - </description>
        </item>
    
    
  </channel>
</rss> 