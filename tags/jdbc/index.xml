<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JDBC on 🌏 ZackYJ&#39;s Blog</title>
    <link>https://blog.wvuuvw.xyz/tags/jdbc/</link>
    <description>Recent content in JDBC on 🌏 ZackYJ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 14 Nov 2020 11:25:05 -0400</lastBuildDate><atom:link href="https://blog.wvuuvw.xyz/tags/jdbc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自定义数据库连接池的实现</title>
      <link>https://blog.wvuuvw.xyz/posts/jdbc%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sat, 14 Nov 2020 11:25:05 -0400</pubDate>
      
      <guid>https://blog.wvuuvw.xyz/posts/jdbc%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AE%9E%E7%8E%B0/</guid>
      <description>背景 数据库连接池用于分配、管理和释放（归还）数据库连接对象 Connection
 有了数据库连接池，可以允许应用重复使用一个现有的数据库连接 从而避免了频繁创建和释放连接，消耗系统资源  最常用的第三方连接池有DBCP、 C3p0、Druid 等，本文实现一个具有基本功能的连接池
基本功能 JDBC 中 java.sql.DataSource 接口定义了数据库连接池的规范
 代表一个数据源，可以用于实现连接池 获取数据库连接对象的方法：Connection getConnection();  覆写这个接口中的方法，可实现基本的连接池功能：
 定义一个类，实现DataSource接口 定义一个容器，保存多个Connection连接对象 定义静态代码块，通过JDBC工具类获取多个连接保存到容器中 ==重写getConnection方法，从容器获取连接并返回== 定义getSize方法，获取容器大小并返回  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  public class MyDataSource implements DataSource{ //1.定义集合容器，用于保存多个数据库连接对象  //Collections.synchronizedList可以将普通集合转成线程安全集合  private static List&amp;lt;Connection&amp;gt; pool = Collections.</description>
    </item>
    
  </channel>
</rss>
