<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>并查集 on 🌏 ZackYJ&#39;s Blog</title>
    <link>https://blog.wvuuvw.xyz/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link>
    <description>Recent content in 并查集 on 🌏 ZackYJ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 14 Nov 2021 11:25:05 -0400</lastBuildDate><atom:link href="https://blog.wvuuvw.xyz/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据结构：并查集介绍和实现</title>
      <link>https://blog.wvuuvw.xyz/posts/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 14 Nov 2021 11:25:05 -0400</pubDate>
      
      <guid>https://blog.wvuuvw.xyz/posts/%E5%B9%B6%E6%9F%A5%E9%9B%86%E5%AE%9E%E7%8E%B0/</guid>
      <description>并查集也叫不相交集合，是一种树状结构，适合解决集合连接等相关问题
 介绍  并查集解决的问题：
 有若干个样本a、b、c、&amp;hellip;类型假设是V 在并查集中一开始认为每个样本都在单独的集合里   并查集的三个核心操作（常数级复杂度）：
 Find(V)/findRepresent(V) 查找元素所在的集合根节点（或代表节点） boolean isSameSet（Vx，Vy） 查询样本x和样本y是否属于一个集合 void union(Vx，Vy) 把x和y各自所在集合的所有样本合并成一个集合  实现  数组实现 如果并查集中值存储整型元素，可以使用数组来实现：
 数组下标为 i 的元素为 i 的父节点
 Quick Find   Union -合并：将v1所在集合的所有元素都嫁接到v2的父节点上
  即：将下标v1的元素的值（父节点）改为下标v2元素的值（父节点）
  原来父节点是v1的节点，父节点也改为 v2
1 2 3 4 5 6 7 8 9 10 11  public void union(int v1,int v2){ int p1 = find(v1); int p2 = find(v2); if(p1 == p2) { return; } for(int i = 0;i&amp;lt;parents.</description>
    </item>
    
  </channel>
</rss>
