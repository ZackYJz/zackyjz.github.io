<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>事务 on 🌏 ZackYJ&#39;s Blog</title>
    <link>http://blog.wvuuvw.xyz/tags/%E4%BA%8B%E5%8A%A1/</link>
    <description>Recent content in 事务 on 🌏 ZackYJ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 03 Jan 2021 08:31:23 +0800</lastBuildDate><atom:link href="http://blog.wvuuvw.xyz/tags/%E4%BA%8B%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>转账案例-引入事务和AOP改造</title>
      <link>http://blog.wvuuvw.xyz/posts/%E8%BD%AC%E8%B4%A6%E6%A1%88%E4%BE%8B-%E5%BC%95%E5%85%A5%E4%BA%8B%E5%8A%A1%E5%92%8C-aop-%E6%94%B9%E9%80%A0/</link>
      <pubDate>Sun, 03 Jan 2021 08:31:23 +0800</pubDate>
      
      <guid>http://blog.wvuuvw.xyz/posts/%E8%BD%AC%E8%B4%A6%E6%A1%88%E4%BE%8B-%E5%BC%95%E5%85%A5%E4%BA%8B%E5%8A%A1%E5%92%8C-aop-%E6%94%B9%E9%80%A0/</guid>
      <description>基础功能  spring 整合 DBUtils ，实现简单的用户转账业务
  Account 实体类
1 2 3 4 5 6  public class Account { private Integer id; private String name; private Double money; // setter getter.... }     AccountDao 接口和实现类
  1 2 3 4 5 6  public interface AccountDao { // 转出操作  void out(String outUser, Double money); // 转入操作  void in(String inUser, Double money); }     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  @Repository public class AccountDaoImpl implements AccountDao { @Autowired private QueryRunner queryRunner; @Override public void out(String outUser, Double money) { try { queryRunner.</description>
    </item>
    
  </channel>
</rss>
